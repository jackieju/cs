2001/3
1. 实现脚本函数的互相调用
	1. 在compiler中加入callv, paramv, 和 endcallv指令.

	2. 当编译时发现函数名在pubfunctable中没有时, 到scriptfucntable中查找, 如找到, 则
	添加call指令, 操作数是CFucntion的指针.

	3. paramv记录参数

	4. endcallv指令负责load子函数, 
	把当前IP, 数据段地址和子函数指针推入call stack, 把当前函数指针指向栈的顶端, IP归零
	先分配内存, 然后把数据段的指针指向子函数的内存.
	因为所有指针都是物理地址因此参数也可以是指针. 
	复制参数

	5. return时, 把返回值赋给AX, 销毁内存, 恢复IP和数据段指针, pop出子函数指针.
	
	7. 要修改的地方
	compiler
	实现callv, paramv, endcallv, return
	增加call stack, 当前函数指针
	修改run函数
	
	8. 所有的return语句必须返回一个值.
	
	9. 修改ValidateAddress函数
	使他在验证时遍历callstack中所有的虚拟内存

2.  要考虑当函数的调用参数是一个函数的返回值的情况, 比如: test1(0, test2());
	这一情况当前VM会出错.
	解决方法: 添加一个函数调用栈, 修改所有和函数调用有关的虚拟汇编指令的实现函数和VM的析构函数

3.  被调用的脚本函数如果传出一根指针, 由于函数在return后它所有的内存已被释放, 
	因此这根指针是不可用的. 但传入的指针是可以被被调函数使用的.
	解决方法: 待解决

4. 实现分配动态内存

5. 函数运行时的超时机制

6. 开放式接口: javalib方式

7. 安全性方面的考虑

8. 跨平台

9. 与其他主流产品的接口和通讯


和psse不一样的地方:
1. compile和compileall的逻辑
2. LoadConfig和GetConfig
3. se_interface.h 的注释和interface个数
4. 没有使用RunScript

使用cocor改造compiler， 就是把生成语法树或代码段的逻辑放到.atg和.frm中
1. CompoundStatement
2. functoncall and ActualParameter


20110512
1. need type cast, or implicitly cast ?
2. call pub function
function puts(string v){
	put_str(v);
	put_str((char*)v);
}
function create(){
 var a = "dd"; // is object
 puts(s); // should check parameter type ? should cast implicitly ?
 puts((string(s)); // should cast explicitly ?
}

3. cannot allocate var dymanically, because dont' know it's var or function call
but now formalparameter doesn't need specify type

how to solve a variable referencing outer variable ?
1. create new address mode
2. create new local variable, add a command to get dynamical address for it, if failed, create new local variable

class member must not be primitive type, becaseu when parser meet 
a.b
the parser don't know whether cast the result address to an object to an primitive type, unless you allocate all primitive like object,
although user write them as primitive type


amode_obj  tell vm dest value is a pointer pointing to a object, the object's cls tell its class
_newobj    just create an objectInstance
_eaobj


primary: search&push variable or not
a.b: call class method

object variable is allocated in two case:
1. explicitly defined: var a;
2. assignment expression: a = b;

a = b;
if a is object -> is null, b is primitive, should create a new object for a
						   b is object, should pointer a to b
 				  not null, should call class.= operator

primitive type can only be used in a function, should detect and generate compiler error for it.
or automatically convert to object

"$"identifier
"${"identifier"}"

currently not support pass object to pubfunction, because paramv don't know the type of operand, if AMODE_OBJ was deleted.
If need to support this, should add command parampubobj



TODO
hash
regular express
array
class member must be object (primitive type only used as local variable)


language is just configure language (no additional configure language)
[package name]
aa => string without quote
 
[package name2]
bb = string with quote


lanuguage is just data (no xml)
object.to_json

language is just sql (no sql)
<storage type> class aaa{
var a :=> hash without {}
var b :=> type: fdaf, lenght: 1, key:yes;

}===>{configure hash}


aa => string without quote
aa :=  hash without {}
var aa <=> configure hash
aa.config = configure hash (but cannot assign)





